nv_training_personas <- select(df_training_personas, -diff_variables_p)
nv_training_personas<- df_training_personas %>% select(-all_of(diff_variables_p))
comprof <- setdiff(names(nv_training_hogares), names(df_test_hogares))
print(comprof)
colnames(nv_training_hogares)
colnames (nv_training_personas)
summary(nv_training_hogares)
summary(nv_training_personas)
nv_training_hogares <- nv_training_hogares %>% mutate (tipo_vivienda=factor(P5090,levels=c(1, 2, 3, 4, 5, 6)))
df_test_hogares <- df_test_hogares %>% mutate (Nro_cuartos = P5000)
nv_training_hogares <- nv_training_hogares %>% mutate (Nro_cuartos = P5000)
nv_training_hogares <- nv_training_hogaress %>% mutate (arriendo = P5140)
#variable categorica tipo de vivienda
nv_training_hogares <- nv_training_hogares %>% mutate (tipo_vivienda=factor(P5090,levels=c(1, 2, 3, 4, 5, 6)))
#variable número de cuearto
nv_training_hogares <- nv_training_hogares %>% mutate (Nro_cuartos = P5000)
#variable número de personas por cuatos
nv_training_hogares <- nv_training_hogares %>% mutate (Nro_personas_cuartos = Nper/P5010)
#variable cuota ¿cuanto paga de cuota de amortización mesualmente?
nv_training_hogares <- nv_training_hogares %>% mutate (cuota_amortizacion = P5100)
#variable ¿cuanto paga de arriendo mesualmente?
nv_training_hogares <- nv_training_hogares %>% mutate (arriendo = P5140)
colnames(nv_training_hogares)
colnames (nv_training_personas)
#variable mujer 1 si es mujer 0 en otros caos
nv_training_personas <- nv_training_personas %>% mutate(mujer = ifelse(P6020 == 0, 1, 0))
#######Modificación de las bases de datos########
## Se modifica la base de datos de hogares
#variable categorica tipo de vivienda
nv_training_hogares <- nv_training_hogares %>% mutate (tipo_vivienda=factor(P5090,levels=c(1, 2, 3, 4, 5, 6)))
#variable número de cuearto
nv_training_hogares <- nv_training_hogares %>% mutate (Nro_cuartos = P5000)
#variable número de personas por cuatos
nv_training_hogares <- nv_training_hogares %>% mutate (Nro_personas_cuartos = Nper/P5010)
#variable cuota ¿cuanto paga de cuota de amortización mesualmente?
nv_training_hogares <- nv_training_hogares %>% mutate (cuota_amortizacion = P5100)
#variable ¿cuanto paga de arriendo mesualmente?
nv_training_hogares <- nv_training_hogares %>% mutate (arriendo = P5140)
# Frente a la base de datos de personas y sus  variables de sexo, jefe de hogar y nivel educativo alcanzado, se realizan los siguientes cambios:
#variable mujer 1 si es mujer 0 en otros caos
nv_training_personas <- nv_training_personas %>% mutate(mujer = ifelse(P6020 == 0, 1, 0))
#variable categorica, parenteszo jefe del hogar
nv_training_personas <- nv_training_personas %>% mutate(jefe_hogar = ifelse(P6050 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(hijo = ifelse(P6050 == 3, 1, 0))
#variable si el jefe del hogar es mujer
nv_training_personas <- nv_training_personas %>% mutate(jefe_hogar_mujer = jefe_hogar*mujer)
aggregate(nv_training_personas$P6210s1, by = list(nv_training_personas$P6210), mean, na.rm = TRUE)
aggregate(nv_training_personas$P6210s1, by = list(nv_training_personas$P6210), min, na.rm = TRUE)
aggregate(nv_training_personas$P6210s1, by = list(nv_training_personas$P6210), max, na.rm = TRUE)
nv_training_personas %>% subset(P6210 == 2) %>% select(P6210s1) %>% table()
nv_training_personas %>% subset(P6210 == 3) %>% select(P6210s1) %>% table()
nv_training_personas %>% subset(P6210 == 4) %>% select(P6210s1) %>% table()
nv_training_personas %>% subset(P6210 == 5) %>% select(P6210s1) %>% table()
nv_training_personas %>% subset(P6210 == 6) %>% select(P6210s1) %>% table()
nv_training_personas <- nv_training_personas %>% mutate(P6210s1 = ifelse(P6210 == 4 & P6210s1 == 0, 5, P6210s1))
nv_training_personas <- nv_training_personas %>% mutate(edu = case_when(P6210 == 1 ~ 0,P6210 == 2 ~ P6210s1,P6210 == 3 ~ P6210s1 + 1,P6210 == 4 ~ P6210s1 + 1,P6210 == 5 ~ P6210s1 + 1,P6210 == 6 ~ P6210s1 + 1, P6210 == 7 ~ P6210s1 + 1,P6210 == 8 ~ P6210s1 + 1,P6210 == 9 ~ P6210s1 + 1,P6210 == 10 ~ P6210s1 + 1))
#Frente a las variables de trabajo u otros ingresos, se realizan los siguientes cambios:
nv_training_personas <- nv_training_personas %>% mutate(trabajo_formal = ifelse(P6920 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(segundo_trabajo = ifelse(P7040 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(arriendos = ifelse(P7495 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(pensiones = ifelse(P7500s2 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(pension_alimenticia = ifelse(P7500s3 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(otros_ingresos = ifelse(P7505 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(otros_ingresos_pais = ifelse(P7510s1 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(otros_ingresos_otros_paises = ifelse(P7510s2 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(otros_ingresos_instituciones = ifelse(P7510s3 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(otras_ganancias = ifelse(P7510s5 == 1, 1, 0))
# Se agrupa la información de la base personas por hogar para unirla con la base de hogar
df_test_hogares1 <-nv_training_personas %>% group_by(id) %>% summarize(Nro_mujeres=sum(mujer,na.rm = TRUE),
edad_promedio=mean(P6040,na.rm = TRUE),jefe_hogar_mujer=sum(jefe_hogar_mujer,na.rm = TRUE),Nro_hijos=sum(hijo,na.rm = TRUE),Nro_personas_trabajo_formal=sum(P6090,na.rm = TRUE),
edu_promedio=mean(edu,na.rm = TRUE),Nro_personas_subsidio_familiar=sum(P6585s3,na.rm = TRUE), horas_trabajadas_promedio=mean(P6800,na.rm = TRUE),
Nro_personas_empleo_propio=sum(P6870,na.rm = TRUE),Nro_personas_trabajo_formal=sum(trabajo_formal,na.rm = TRUE),Nro_personas_segundo_trabajo=sum(segundo_trabajo,na.rm = TRUE),
Nro_personas_arriendos=sum(arriendos,na.rm = TRUE),Nro_personas_pensiones=sum(pensiones,na.rm = TRUE),
Nro_personas_pension_alimenticia=sum(pension_alimenticia,na.rm = TRUE),Nro_personas_otros_ingresos=sum(otros_ingresos,na.rm = TRUE),
Nro_personas_otros_ingresos_pais=sum(otros_ingresos_pais,na.rm = TRUE),Nro_personas_otros_ingresos_otros_paises=sum(otros_ingresos_otros_paises,na.rm = TRUE),
Nro_personas_otros_ingresos_instituciones=sum(otros_ingresos_instituciones,na.rm = TRUE), Nro_personas_otras_ganancias=sum(otras_ganancias,na.rm = TRUE),
Nro_personas_PET=sum(Pet,na.rm = TRUE),Nro_personas_ocupadas=sum(Oc,na.rm = TRUE), Nro_personas_desempleadas=sum(Des,na.rm = TRUE),
Nro_personas_inactivas=sum(Ina,na.rm = TRUE))
colnames(nv_training_hogares)
colnames (nv_training_personas)
summary(nv_training_hogares)
summary(nv_training_personas)
View(nv_training_hogares)
nv_training_hogares_VF <- left_join(nv_training_hogares, nv_training_hogares1)
nv_training_hogares <- import("nv_train_hogares.csv")
colnames(nv_training_hogares)
colnames (nv_training_personas)
summary(nv_training_hogares)
summary(nv_training_personas)
#######Modificación de las bases de datos########
## Se modifica la base de datos de hogares
#variable categorica tipo de vivienda
nv_training_hogares <- nv_training_hogares %>% mutate (tipo_vivienda=factor(P5090,levels=c(1, 2, 3, 4, 5, 6)))
#variable número de cuarto
nv_training_hogares <- nv_training_hogares %>% mutate (Nro_cuartos = P5000)
#variable número de personas por cuartos
nv_training_hogares <- nv_training_hogares %>% mutate (Nro_personas_cuartos = Nper/P5010)
#variable cuota ¿cuanto paga de cuota de amortización mesualmente?
nv_training_hogares <- nv_training_hogares %>% mutate (cuota_amortizacion = P5100)
#variable ¿cuanto paga de arriendo mesualmente?
nv_training_hogares <- nv_training_hogares %>% mutate (arriendo = P5140)
# Frente a la base de datos de personas y sus  variables de sexo, jefe de hogar y nivel educativo alcanzado, se realizan los siguientes cambios:
#variable mujer 1 si es mujer 0 en otros caos
nv_training_personas <- nv_training_personas %>% mutate(mujer = ifelse(P6020 == 0, 1, 0))
#variable categorica, parenteszo jefe del hogar
nv_training_personas <- nv_training_personas %>% mutate(jefe_hogar = ifelse(P6050 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(hijo = ifelse(P6050 == 3, 1, 0))
#variable si el jefe del hogar es mujer
nv_training_personas <- nv_training_personas %>% mutate(jefe_hogar_mujer = jefe_hogar*mujer)
aggregate(nv_training_personas$P6210s1, by = list(nv_training_personas$P6210), mean, na.rm = TRUE)
aggregate(nv_training_personas$P6210s1, by = list(nv_training_personas$P6210), min, na.rm = TRUE)
aggregate(nv_training_personas$P6210s1, by = list(nv_training_personas$P6210), max, na.rm = TRUE)
nv_training_personas %>% subset(P6210 == 2) %>% select(P6210s1) %>% table()
nv_training_personas %>% subset(P6210 == 3) %>% select(P6210s1) %>% table()
nv_training_personas %>% subset(P6210 == 4) %>% select(P6210s1) %>% table()
nv_training_personas %>% subset(P6210 == 5) %>% select(P6210s1) %>% table()
nv_training_personas %>% subset(P6210 == 6) %>% select(P6210s1) %>% table()
nv_training_personas <- nv_training_personas %>% mutate(P6210s1 = ifelse(P6210 == 4 & P6210s1 == 0, 5, P6210s1))
nv_training_personas <- nv_training_personas %>% mutate(edu = case_when(P6210 == 1 ~ 0,P6210 == 2 ~ P6210s1,P6210 == 3 ~ P6210s1 + 1,P6210 == 4 ~ P6210s1 + 1,P6210 == 5 ~ P6210s1 + 1,P6210 == 6 ~ P6210s1 + 1, P6210 == 7 ~ P6210s1 + 1,P6210 == 8 ~ P6210s1 + 1,P6210 == 9 ~ P6210s1 + 1,P6210 == 10 ~ P6210s1 + 1))
#Frente a las variables de trabajo u otros ingresos, se realizan los siguientes cambios:
nv_training_personas <- nv_training_personas %>% mutate(trabajo_formal = ifelse(P6920 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(segundo_trabajo = ifelse(P7040 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(arriendos = ifelse(P7495 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(pensiones = ifelse(P7500s2 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(pension_alimenticia = ifelse(P7500s3 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(otros_ingresos = ifelse(P7505 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(otros_ingresos_pais = ifelse(P7510s1 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(otros_ingresos_otros_paises = ifelse(P7510s2 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(otros_ingresos_instituciones = ifelse(P7510s3 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(otras_ganancias = ifelse(P7510s5 == 1, 1, 0))
# Se agrupa la información de la base personas por hogar para unirla con la base de hogar
nv_test_hogares1 <-nv_training_personas %>% group_by(id) %>% summarize(Nro_mujeres=sum(mujer,na.rm = TRUE),
edad_promedio=mean(P6040,na.rm = TRUE),jefe_hogar_mujer=sum(jefe_hogar_mujer,na.rm = TRUE),
Nro_hijos=sum(hijo,na.rm = TRUE),Nro_personas_trabajo_formal=sum(P6090,na.rm = TRUE),
edu_promedio=mean(edu,na.rm = TRUE),Nro_personas_subsidio_familiar=sum(P6585s3,na.rm = TRUE),
horas_trabajadas_promedio=mean(P6800,na.rm = TRUE),Nro_personas_empleo_propio=sum(P6870,na.rm = TRUE),
Nro_personas_trabajo_formal=sum(trabajo_formal,na.rm = TRUE),Nro_personas_segundo_trabajo=sum(segundo_trabajo,na.rm = TRUE),
Nro_personas_arriendos=sum(arriendos,na.rm = TRUE),Nro_personas_pensiones=sum(pensiones,na.rm = TRUE),
Nro_personas_pension_alimenticia=sum(pension_alimenticia,na.rm = TRUE),Nro_personas_otros_ingresos=sum(otros_ingresos,na.rm = TRUE),
Nro_personas_otros_ingresos_pais=sum(otros_ingresos_pais,na.rm = TRUE),Nro_personas_otros_ingresos_otros_paises=sum(otros_ingresos_otros_paises,na.rm = TRUE),
Nro_personas_otros_ingresos_instituciones=sum(otros_ingresos_instituciones,na.rm = TRUE), Nro_personas_otras_ganancias=sum(otras_ganancias,na.rm = TRUE),
Nro_personas_PET=sum(Pet,na.rm = TRUE),Nro_personas_ocupadas=sum(Oc,na.rm = TRUE), Nro_personas_desempleadas=sum(Des,na.rm = TRUE),
Nro_personas_inactivas=sum(Ina,na.rm = TRUE))
summary(nv_training_hogares)
summary(nv_training_personas)
## Se unen las bases de datos:
nv_training_hogares_VF <- left_join(nv_training_hogares, nv_training_hogares1)
#variable categorica tipo de vivienda
nv_training_hogares <- nv_training_hogares %>% mutate (tipo_vivienda=factor(P5090,levels=c(1, 2, 3, 4, 5, 6)))
#variable número de cuarto
nv_training_hogares <- nv_training_hogares %>% mutate (Nro_cuartos = P5000)
#variable número de personas por cuartos
nv_training_hogares <- nv_training_hogares %>% mutate (Nro_personas_cuartos = Nper/P5010)
#variable cuota ¿cuanto paga de cuota de amortización mesualmente?
nv_training_hogares <- nv_training_hogares %>% mutate (cuota_amortizacion = P5100)
#variable ¿cuanto paga de arriendo mesualmente?
nv_training_hogares <- nv_training_hogares %>% mutate (arriendo = P5140)
# Frente a la base de datos de personas y sus  variables de sexo, jefe de hogar y nivel educativo alcanzado, se realizan los siguientes cambios:
#variable mujer 1 si es mujer 0 en otros caos
nv_training_personas <- nv_training_personas %>% mutate(mujer = ifelse(P6020 == 0, 1, 0))
#variable categorica, parenteszo jefe del hogar
nv_training_personas <- nv_training_personas %>% mutate(jefe_hogar = ifelse(P6050 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(hijo = ifelse(P6050 == 3, 1, 0))
#variable si el jefe del hogar es mujer
nv_training_personas <- nv_training_personas %>% mutate(jefe_hogar_mujer = jefe_hogar*mujer)
aggregate(nv_training_personas$P6210s1, by = list(nv_training_personas$P6210), mean, na.rm = TRUE)
aggregate(nv_training_personas$P6210s1, by = list(nv_training_personas$P6210), min, na.rm = TRUE)
aggregate(nv_training_personas$P6210s1, by = list(nv_training_personas$P6210), max, na.rm = TRUE)
nv_training_personas %>% subset(P6210 == 2) %>% select(P6210s1) %>% table()
nv_training_personas %>% subset(P6210 == 3) %>% select(P6210s1) %>% table()
nv_training_personas %>% subset(P6210 == 4) %>% select(P6210s1) %>% table()
nv_training_personas %>% subset(P6210 == 5) %>% select(P6210s1) %>% table()
nv_training_personas %>% subset(P6210 == 6) %>% select(P6210s1) %>% table()
nv_training_personas <- nv_training_personas %>% mutate(P6210s1 = ifelse(P6210 == 4 & P6210s1 == 0, 5, P6210s1))
nv_training_personas <- nv_training_personas %>% mutate(edu = case_when(P6210 == 1 ~ 0,P6210 == 2 ~ P6210s1,P6210 == 3 ~ P6210s1 + 1,P6210 == 4 ~ P6210s1 + 1,P6210 == 5 ~ P6210s1 + 1,P6210 == 6 ~ P6210s1 + 1, P6210 == 7 ~ P6210s1 + 1,P6210 == 8 ~ P6210s1 + 1,P6210 == 9 ~ P6210s1 + 1,P6210 == 10 ~ P6210s1 + 1))
#Frente a las variables de trabajo u otros ingresos, se realizan los siguientes cambios:
nv_training_personas <- nv_training_personas %>% mutate(trabajo_formal = ifelse(P6920 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(segundo_trabajo = ifelse(P7040 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(arriendos = ifelse(P7495 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(pensiones = ifelse(P7500s2 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(pension_alimenticia = ifelse(P7500s3 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(otros_ingresos = ifelse(P7505 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(otros_ingresos_pais = ifelse(P7510s1 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(otros_ingresos_otros_paises = ifelse(P7510s2 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(otros_ingresos_instituciones = ifelse(P7510s3 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(otras_ganancias = ifelse(P7510s5 == 1, 1, 0))
# Se agrupa la información de la base personas por hogar para unirla con la base de hogar
nv_training_hogares1 <-nv_training_personas %>% group_by(id) %>% summarize(Nro_mujeres=sum(mujer,na.rm = TRUE),
edad_promedio=mean(P6040,na.rm = TRUE),jefe_hogar_mujer=sum(jefe_hogar_mujer,na.rm = TRUE),
Nro_hijos=sum(hijo,na.rm = TRUE),Nro_personas_trabajo_formal=sum(P6090,na.rm = TRUE),
edu_promedio=mean(edu,na.rm = TRUE),Nro_personas_subsidio_familiar=sum(P6585s3,na.rm = TRUE),
horas_trabajadas_promedio=mean(P6800,na.rm = TRUE),Nro_personas_empleo_propio=sum(P6870,na.rm = TRUE),
Nro_personas_trabajo_formal=sum(trabajo_formal,na.rm = TRUE),Nro_personas_segundo_trabajo=sum(segundo_trabajo,na.rm = TRUE),
Nro_personas_arriendos=sum(arriendos,na.rm = TRUE),Nro_personas_pensiones=sum(pensiones,na.rm = TRUE),
Nro_personas_pension_alimenticia=sum(pension_alimenticia,na.rm = TRUE),Nro_personas_otros_ingresos=sum(otros_ingresos,na.rm = TRUE),
Nro_personas_otros_ingresos_pais=sum(otros_ingresos_pais,na.rm = TRUE),Nro_personas_otros_ingresos_otros_paises=sum(otros_ingresos_otros_paises,na.rm = TRUE),
Nro_personas_otros_ingresos_instituciones=sum(otros_ingresos_instituciones,na.rm = TRUE), Nro_personas_otras_ganancias=sum(otras_ganancias,na.rm = TRUE),
Nro_personas_PET=sum(Pet,na.rm = TRUE),Nro_personas_ocupadas=sum(Oc,na.rm = TRUE), Nro_personas_desempleadas=sum(Des,na.rm = TRUE),
Nro_personas_inactivas=sum(Ina,na.rm = TRUE))
summary(nv_training_hogares)
summary(nv_training_personas)
## Se unen las bases de datos:
nv_training_hogares_VF <- left_join(nv_training_hogares, nv_training_hogares1)
saveRDS(nv_training_hogares_VF, file = "nv_training_hogares_VF.rds")
colnames (nv_training_hogares_VF)
summary(nv_training_hogares_VF)
View(nv_training_hogares_VF)
saveRDS(nv_training_hogares_VF, file = "nv_training_hogares_VF.rds")
str(nv_training_hogares_VF)
colnames(df_test_hogares)
colnames(df_training_hogares)
# comparar los nombres de las variables
diff_variables <- setdiff(names(df_training_hogares), names(df_test_hogares))
diff_variables <- diff_variables[diff_variables != "Pobre"]
# imprimir las variables diferentes
print(diff_variables) #variables que estan en training y no en test
#analizamos las variables presentes en ambas bases
#para hogares
colnames(df_test_personas)
colnames(df_training_personas)
# comparar los nombres de las variables menos la variable pobre
diff_variables_p <- setdiff(names(df_training_personas), names(df_test_personas))
# imprimir las variables diferentes
print(diff_variables_p) #variables que estan en training y no en test
#creamos una nueva base de training menos las variables diferentes
nv_training_hogares <- df_training_hogares%>%select(-all_of(diff_variables))
#realizamos el mismo proceso para la base de training de personas
nv_training_personas<- df_training_personas %>% select(-all_of(diff_variables_p))
install.packages("pacman")
require(pacman)
p_load(tidyverse,rvest,writexl,rio,skimr,pastecs,PerformanceAnalytics,naniar,gtsummary)
install.packages("pacman")
df_training_hogares <- readRDS("~/OneDrive - Universidad de los Andes/2023/2023-1/BIG DATA/TALLERES GRUPALES/TALLER No. 2/Problem_Set_2-_Predicting_Poverty/3. STORE/df_training_hogares.rds")
df_training_personas <- readRDS("~/OneDrive - Universidad de los Andes/2023/2023-1/BIG DATA/TALLERES GRUPALES/TALLER No. 2/Problem_Set_2-_Predicting_Poverty/3. STORE/df_training_personas.rds")
df_test_hogares <- readRDS("~/OneDrive - Universidad de los Andes/2023/2023-1/BIG DATA/TALLERES GRUPALES/TALLER No. 2/Problem_Set_2-_Predicting_Poverty/3. STORE/df_test_hogares.rds")
df_test_personas <- readRDS("~/OneDrive - Universidad de los Andes/2023/2023-1/BIG DATA/TALLERES GRUPALES/TALLER No. 2/Problem_Set_2-_Predicting_Poverty/3. STORE/df_test_personas.rds")
# comparar los nombres de las variables
diff_variables <- setdiff(names(df_training_hogares), names(df_test_hogares))
diff_variables <- diff_variables[diff_variables != "Pobre"]
# imprimir las variables diferentes
print(diff_variables) #variables que estan en training y no en test
#analizamos las variables presentes en ambas bases
#para hogares
colnames(df_test_personas)
colnames(df_training_personas)
# comparar los nombres de las variables menos la variable pobre
diff_variables_p <- setdiff(names(df_training_personas), names(df_test_personas))
# imprimir las variables diferentes
print(diff_variables_p) #variables que estan en training y no en test
#creamos una nueva base de training menos las variables diferentes
nv_training_hogares <- df_training_hogares%>%select(-all_of(diff_variables))
install.packages("pacman")
require(pacman)
p_load(tidyverse,rvest,writexl,rio,skimr,pastecs,PerformanceAnalytics,naniar,gtsummary)
# comparar los nombres de las variables
diff_variables <- setdiff(names(df_training_hogares), names(df_test_hogares))
diff_variables <- diff_variables[diff_variables != "Pobre"]
# imprimir las variables diferentes
print(diff_variables) #variables que estan en training y no en test
#analizamos las variables presentes en ambas bases
#para hogares
colnames(df_test_personas)
colnames(df_training_personas)
# comparar los nombres de las variables menos la variable pobre
diff_variables_p <- setdiff(names(df_training_personas), names(df_test_personas))
# imprimir las variables diferentes
print(diff_variables_p) #variables que estan en training y no en test
#creamos una nueva base de training menos las variables diferentes
nv_training_hogares <- df_training_hogares%>%select(-all_of(diff_variables))
#realizamos el mismo proceso para la base de training de personas
nv_training_personas<- df_training_personas %>% select(-all_of(diff_variables_p))
#en este punto tenemos las mismas variables en ambas bases tanto para training como para test personas y hogares
#variable categorica tipo de vivienda
nv_training_hogares <- nv_training_hogares %>% mutate (tipo_vivienda=factor(P5090,levels=c(1, 2, 3, 4, 5, 6)))
#variable número de cuarto
nv_training_hogares <- nv_training_hogares %>% mutate (Nro_cuartos = P5000)
#variable número de personas por cuartos
nv_training_hogares <- nv_training_hogares %>% mutate (Nro_personas_cuartos = Nper/P5010)
#variable cuota ¿cuanto paga de cuota de amortización mesualmente?
nv_training_hogares <- nv_training_hogares %>% mutate (cuota_amortizacion = P5100)
#variable ¿cuanto paga de arriendo mesualmente?
nv_training_hogares <- nv_training_hogares %>% mutate (arriendo = P5140)
# Frente a la base de datos de personas y sus  variables de sexo, jefe de hogar y nivel educativo alcanzado, se realizan los siguientes cambios:
#variable mujer 1 si es mujer 0 en otros caos
nv_training_personas <- nv_training_personas %>% mutate(mujer = ifelse(P6020 == 0, 1, 0))
#variable categorica, parenteszo jefe del hogar
nv_training_personas <- nv_training_personas %>% mutate(jefe_hogar = ifelse(P6050 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(hijo = ifelse(P6050 == 3, 1, 0))
#variable si el jefe del hogar es mujer
nv_training_personas <- nv_training_personas %>% mutate(jefe_hogar_mujer = jefe_hogar*mujer)
# Variable categórica de educación:
aggregate(nv_training_personas$P6210s1, by = list(nv_training_personas$P6210), mean, na.rm = TRUE)
aggregate(nv_training_personas$P6210s1, by = list(nv_training_personas$P6210), min, na.rm = TRUE)
aggregate(nv_training_personas$P6210s1, by = list(nv_training_personas$P6210), max, na.rm = TRUE)
nv_training_personas %>% subset(P6210 == 2) %>% select(P6210s1) %>% table()
nv_training_personas %>% subset(P6210 == 3) %>% select(P6210s1) %>% table()
nv_training_personas %>% subset(P6210 == 4) %>% select(P6210s1) %>% table()
nv_training_personas %>% subset(P6210 == 5) %>% select(P6210s1) %>% table()
nv_training_personas %>% subset(P6210 == 6) %>% select(P6210s1) %>% table()
nv_training_personas <- nv_training_personas %>% mutate(P6210s1 = ifelse(P6210 == 4 & P6210s1 == 0, 5, P6210s1))
nv_training_personas <- nv_training_personas %>% mutate(edu = case_when(P6210 == 1 ~ 0,P6210 == 2 ~ P6210s1,P6210 == 3 ~ P6210s1 + 1,P6210 == 4 ~ P6210s1 + 1,P6210 == 5 ~ P6210s1 + 1,P6210 == 6 ~ P6210s1 + 1, P6210 == 7 ~ P6210s1 + 1,P6210 == 8 ~ P6210s1 + 1,P6210 == 9 ~ P6210s1 + 1,P6210 == 10 ~ P6210s1 + 1))
#Frente a las variables de trabajo u otros ingresos, se realizan los siguientes cambios:
#Variable categorica trabajo_formal
nv_training_personas <- nv_training_personas %>% mutate(trabajo_formal = ifelse(P6920 == 1, 1, 0))
# Variable categórica de segundo trabajo 1 si 0 no
nv_training_personas <- nv_training_personas %>% mutate(segundo_trabajo = ifelse(P7040 == 1, 1, 0))
# Variable categórica de pagos por arriendo 1 si 0 no
nv_training_personas <- nv_training_personas %>% mutate(arriendos = ifelse(P7495 == 1, 1, 0))
# Variable categórica de pagos por pensión 1 si 0 no
nv_training_personas <- nv_training_personas %>% mutate(pensiones = ifelse(P7500s2 == 1, 1, 0))
# Variable categórica de pagos por pensión alimentaria 1 si 0 no
nv_training_personas <- nv_training_personas %>% mutate(pension_alimenticia = ifelse(P7500s3 == 1, 1, 0))
# Variable categórica de pagos por otros ingresos 1 si 0 no
nv_training_personas <- nv_training_personas %>% mutate(otros_ingresos = ifelse(P7505 == 1, 1, 0))
# Variable categórica de pagos por envios de dinero dentro del país 1 si 0 no
nv_training_personas <- nv_training_personas %>% mutate(otros_ingresos_pais = ifelse(P7510s1 == 1, 1, 0))
# Variable categórica de pagos por concepto de remesas 1 si 0 no
nv_training_personas <- nv_training_personas %>% mutate(otros_ingresos_otros_paises = ifelse(P7510s2 == 1, 1, 0))
# Variable categórica de pagos por otros ingresos provenientes de otras instituciones 1 si 0 no
nv_training_personas <- nv_training_personas %>% mutate(otros_ingresos_instituciones = ifelse(P7510s3 == 1, 1, 0))
# Variable categórica de pagos por otras ganancias 1 si 0 no
nv_training_personas <- nv_training_personas %>% mutate(otras_ganancias = ifelse(P7510s5 == 1, 1, 0))
# Se agrupa la información de la base personas por hogar para unirla con la base de hogar
nv_training_hogares1 <-nv_training_personas %>% group_by(id) %>% summarize(Nro_mujeres=sum(mujer,na.rm = TRUE),
edad_promedio=mean(P6040,na.rm = TRUE),jefe_hogar_mujer=sum(jefe_hogar_mujer,na.rm = TRUE),
Nro_hijos=sum(hijo,na.rm = TRUE),Nro_personas_trabajo_formal=sum(P6090,na.rm = TRUE),
edu_promedio=mean(edu,na.rm = TRUE),Nro_personas_subsidio_familiar=sum(P6585s3,na.rm = TRUE),
horas_trabajadas_promedio=mean(P6800,na.rm = TRUE),Nro_personas_empleo_propio=sum(P6870,na.rm = TRUE),
Nro_personas_trabajo_formal=sum(trabajo_formal,na.rm = TRUE),Nro_personas_segundo_trabajo=sum(segundo_trabajo,na.rm = TRUE),
Nro_personas_arriendos=sum(arriendos,na.rm = TRUE),Nro_personas_pensiones=sum(pensiones,na.rm = TRUE),
Nro_personas_pension_alimenticia=sum(pension_alimenticia,na.rm = TRUE),Nro_personas_otros_ingresos=sum(otros_ingresos,na.rm = TRUE),
Nro_personas_otros_ingresos_pais=sum(otros_ingresos_pais,na.rm = TRUE),Nro_personas_otros_ingresos_otros_paises=sum(otros_ingresos_otros_paises,na.rm = TRUE),
Nro_personas_otros_ingresos_instituciones=sum(otros_ingresos_instituciones,na.rm = TRUE), Nro_personas_otras_ganancias=sum(otras_ganancias,na.rm = TRUE),
Nro_personas_PET=sum(Pet,na.rm = TRUE),Nro_personas_ocupadas=sum(Oc,na.rm = TRUE), Nro_personas_desempleadas=sum(Des,na.rm = TRUE),
Nro_personas_inactivas=sum(Ina,na.rm = TRUE))
summary(nv_training_hogares)
summary(nv_training_personas)
## Se unen las bases de datos:
nv_training_hogares_VF <- left_join(nv_training_hogares, nv_training_hogares1)
saveRDS(nv_training_hogares_VF, file = "nv_training_hogares_VF.rds")
colnames (nv_training_hogares_VF)
summary(nv_training_hogares_VF)
str(nv_training_hogares_VF)
saveRDS(nv_training_hogares_VF, file = "nv_training_hogares_VF.rds")
View(nv_training_hogares_VF)
df_training_personas <- readRDS("~/OneDrive - Universidad de los Andes/2023/2023-1/BIG DATA/TALLERES GRUPALES/TALLER No. 2/Problem_Set_2-_Predicting_Poverty/3. STORE/df_training_personas.rds")
View(df_training_personas)
View(nv_training_hogares1)
#variable mujer 1 si es mujer 0 en otros caos
nv_training_personas <- nv_training_personas %>% mutate(mujer = ifelse(P6020 == 0, 1, 0))
#variable mujer 1 si es mujer 0 en otros caos
nv_training_personas <- nv_training_personas %>% mutate(mujer = ifelse(P6020 == 0, 1, 0))
View(nv_training_personas)
nv_training_personas <- nv_training_personas %>% mutate(mujer = ifelse(P6020 == 2, 1, 0))
#variable categorica tipo de vivienda
nv_training_hogares <- nv_training_hogares %>% mutate (tipo_vivienda=factor(P5090,levels=c(1, 2, 3, 4, 5, 6)))
#variable número de cuarto
nv_training_hogares <- nv_training_hogares %>% mutate (Nro_cuartos = P5000)
#variable número de personas por cuartos
nv_training_hogares <- nv_training_hogares %>% mutate (Nro_personas_cuartos = Nper/P5010)
#variable cuota ¿cuanto paga de cuota de amortización mesualmente?
nv_training_hogares <- nv_training_hogares %>% mutate (cuota_amortizacion = P5100)
#variable ¿cuanto paga de arriendo mesualmente?
nv_training_hogares <- nv_training_hogares %>% mutate (arriendo = P5140)
# Frente a la base de datos de personas y sus  variables de sexo, jefe de hogar y nivel educativo alcanzado, se realizan los siguientes cambios:
#variable mujer 1 si es mujer 0 en otros caos
nv_training_personas <- nv_training_personas %>% mutate(mujer = ifelse(P6020 == 2, 1, 0))
#variable categorica, parenteszo jefe del hogar
nv_training_personas <- nv_training_personas %>% mutate(jefe_hogar = ifelse(P6050 == 1, 1, 0))
nv_training_personas <- nv_training_personas %>% mutate(hijo = ifelse(P6050 == 3, 1, 0))
#variable si el jefe del hogar es mujer
nv_training_personas <- nv_training_personas %>% mutate(jefe_hogar_mujer = jefe_hogar*mujer)
# Variable categórica de educación:
aggregate(nv_training_personas$P6210s1, by = list(nv_training_personas$P6210), mean, na.rm = TRUE)
aggregate(nv_training_personas$P6210s1, by = list(nv_training_personas$P6210), min, na.rm = TRUE)
aggregate(nv_training_personas$P6210s1, by = list(nv_training_personas$P6210), max, na.rm = TRUE)
nv_training_personas %>% subset(P6210 == 2) %>% select(P6210s1) %>% table()
nv_training_personas %>% subset(P6210 == 3) %>% select(P6210s1) %>% table()
nv_training_personas %>% subset(P6210 == 4) %>% select(P6210s1) %>% table()
nv_training_personas %>% subset(P6210 == 5) %>% select(P6210s1) %>% table()
nv_training_personas %>% subset(P6210 == 6) %>% select(P6210s1) %>% table()
nv_training_personas <- nv_training_personas %>% mutate(P6210s1 = ifelse(P6210 == 4 & P6210s1 == 0, 5, P6210s1))
nv_training_personas <- nv_training_personas %>% mutate(edu = case_when(P6210 == 1 ~ 0,P6210 == 2 ~ P6210s1,P6210 == 3 ~ P6210s1 + 1,P6210 == 4 ~ P6210s1 + 1,P6210 == 5 ~ P6210s1 + 1,P6210 == 6 ~ P6210s1 + 1, P6210 == 7 ~ P6210s1 + 1,P6210 == 8 ~ P6210s1 + 1,P6210 == 9 ~ P6210s1 + 1,P6210 == 10 ~ P6210s1 + 1))
#Frente a las variables de trabajo u otros ingresos, se realizan los siguientes cambios:
#Variable categorica trabajo_formal
nv_training_personas <- nv_training_personas %>% mutate(trabajo_formal = ifelse(P6920 == 1, 1, 0))
# Variable categórica de segundo trabajo 1 si 0 no
nv_training_personas <- nv_training_personas %>% mutate(segundo_trabajo = ifelse(P7040 == 1, 1, 0))
# Variable categórica de pagos por arriendo 1 si 0 no
nv_training_personas <- nv_training_personas %>% mutate(arriendos = ifelse(P7495 == 1, 1, 0))
# Variable categórica de pagos por pensión 1 si 0 no
nv_training_personas <- nv_training_personas %>% mutate(pensiones = ifelse(P7500s2 == 1, 1, 0))
# Variable categórica de pagos por pensión alimentaria 1 si 0 no
nv_training_personas <- nv_training_personas %>% mutate(pension_alimenticia = ifelse(P7500s3 == 1, 1, 0))
# Variable categórica de pagos por otros ingresos 1 si 0 no
nv_training_personas <- nv_training_personas %>% mutate(otros_ingresos = ifelse(P7505 == 1, 1, 0))
# Variable categórica de pagos por envios de dinero dentro del país 1 si 0 no
nv_training_personas <- nv_training_personas %>% mutate(otros_ingresos_pais = ifelse(P7510s1 == 1, 1, 0))
# Variable categórica de pagos por concepto de remesas 1 si 0 no
nv_training_personas <- nv_training_personas %>% mutate(otros_ingresos_otros_paises = ifelse(P7510s2 == 1, 1, 0))
# Variable categórica de pagos por otros ingresos provenientes de otras instituciones 1 si 0 no
nv_training_personas <- nv_training_personas %>% mutate(otros_ingresos_instituciones = ifelse(P7510s3 == 1, 1, 0))
# Variable categórica de pagos por otras ganancias 1 si 0 no
nv_training_personas <- nv_training_personas %>% mutate(otras_ganancias = ifelse(P7510s5 == 1, 1, 0))
# Se agrupa la información de la base personas por hogar para unirla con la base de hogar
nv_training_hogares1 <-nv_training_personas %>% group_by(id) %>% summarize(Nro_mujeres=sum(mujer,na.rm = TRUE),
edad_promedio=mean(P6040,na.rm = TRUE),jefe_hogar_mujer=sum(jefe_hogar_mujer,na.rm = TRUE),
Nro_hijos=sum(hijo,na.rm = TRUE),Nro_personas_trabajo_formal=sum(P6090,na.rm = TRUE),
edu_promedio=mean(edu,na.rm = TRUE),Nro_personas_subsidio_familiar=sum(P6585s3,na.rm = TRUE),
horas_trabajadas_promedio=mean(P6800,na.rm = TRUE),Nro_personas_empleo_propio=sum(P6870,na.rm = TRUE),
Nro_personas_trabajo_formal=sum(trabajo_formal,na.rm = TRUE),Nro_personas_segundo_trabajo=sum(segundo_trabajo,na.rm = TRUE),
Nro_personas_arriendos=sum(arriendos,na.rm = TRUE),Nro_personas_pensiones=sum(pensiones,na.rm = TRUE),
Nro_personas_pension_alimenticia=sum(pension_alimenticia,na.rm = TRUE),Nro_personas_otros_ingresos=sum(otros_ingresos,na.rm = TRUE),
Nro_personas_otros_ingresos_pais=sum(otros_ingresos_pais,na.rm = TRUE),Nro_personas_otros_ingresos_otros_paises=sum(otros_ingresos_otros_paises,na.rm = TRUE),
Nro_personas_otros_ingresos_instituciones=sum(otros_ingresos_instituciones,na.rm = TRUE), Nro_personas_otras_ganancias=sum(otras_ganancias,na.rm = TRUE),
Nro_personas_PET=sum(Pet,na.rm = TRUE),Nro_personas_ocupadas=sum(Oc,na.rm = TRUE), Nro_personas_desempleadas=sum(Des,na.rm = TRUE),
Nro_personas_inactivas=sum(Ina,na.rm = TRUE))
summary(nv_training_hogares)
summary(nv_training_personas)
## Se unen las bases de datos:
nv_training_hogares_VF <- left_join(nv_training_hogares, nv_training_hogares1)
saveRDS(nv_training_hogares_VF, file = "nv_training_hogares_VF.rds")
colnames(test)
glimpse(training)
nv_test_sinna <- readRDS("~/OneDrive - Universidad de los Andes/2023/2023-1/BIG DATA/TALLERES GRUPALES/TALLER No. 2/Problem_Set_2-_Predicting_Poverty/3. STORE/nv_test_sinna.rds")
nv_training_sinna <- readRDS("~/OneDrive - Universidad de los Andes/2023/2023-1/BIG DATA/TALLERES GRUPALES/TALLER No. 2/Problem_Set_2-_Predicting_Poverty/3. STORE/nv_training_sinna.rds")
#ANALISIS DE VARIABLES####
# comparar los nombres de las variables
diff_variables <- setdiff(names(training), names(test))
diff_variables <- setdiff(names(nv_training_sinna), names(nv_test_sinna))
print(diff_variables)
#analisis de los datos####
glimpse(nv_training_sinna)
glimpse(nv_test_sinna)
table(nv_training_sinna$Pobre)
prop.table(table(nv_training_sinna$Pobre))
#para training
nv_training_sinna<- nv_training_sinna %>%
mutate(P5090 = factor(P5090),
Dominio = factor(Dominio),
Clase = ifelse(Clase == 2, 0, Clase),
Depto = factor(Depto),
tipo_vivienda= factor(tipo_vivienda))
#para test
nv_test_sinna<- nv_test_sinna %>%
mutate(P5090 = factor(P5090),
Dominio = factor(Dominio),
Clase = ifelse(Clase == 2, 0, Clase),
Depto = factor(Depto),
tipo_vivienda= factor(tipo_vivienda))
# Dummyficamos ####
dumificador <- dummyVars(formula = ~ ., data = nv_training_sinna, fullRank = T)
p_load(caret)
dumificador <- dummyVars(formula = ~ ., data = nv_training_sinna, fullRank = T)
dumificador <- dummyVars(formula = ~ ., data = nv_training_sinna, fullRank = T)
db_train <- predict(dumificador, newdata = nv_training_sinna)
#ANALISIS DE VARIABLES####
# comparar los nombres de las variables
diff_variables <- setdiff(names(nv_training_sinna), names(nv_test_sinna))
# imprimir las variables diferentes
print(diff_variables)
#ambas bases presentan las mimas variables eceptuando pobre
#analisis de los datos####
glimpse(nv_training_sinna)
glimpse(nv_test_sinna)
#analizamos la distribución de la pobreza en nuestra base training
table(nv_training_sinna$Pobre)
prop.table(table(nv_training_sinna$Pobre))
#encontramos un desvalance moderado de la base con un porcentaje del 20% de la clase minoritaria (pobre)
#seeleccionamos nuestras variables categoricas y dummificamos####
#para training
nv_training_sinna<- nv_training_sinna %>%
mutate(P5090 = factor(P5090),
Dominio = factor(Dominio),
Clase = ifelse(Clase == 2, 0, Clase),
Depto = factor(Depto),
tipo_vivienda= factor(tipo_vivienda))
#para test
nv_test_sinna<- nv_test_sinna %>%
mutate(P5090 = factor(P5090),
Dominio = factor(Dominio),
Clase = ifelse(Clase == 2, 0, Clase),
Depto = factor(Depto),
tipo_vivienda= factor(tipo_vivienda))
p_load(caret)
# Dummyficamos ####
dumificador <- dummyVars(formula = ~ ., data = nv_training_sinna, fullRank = T)
db_train <- predict(dumificador, newdata = nv_training_sinna)
nv_test_sinna <- readRDS("~/OneDrive - Universidad de los Andes/2023/2023-1/BIG DATA/TALLERES GRUPALES/TALLER No. 2/Problem_Set_2-_Predicting_Poverty/3. STORE/nv_test_sinna.rds")
nv_training_sinna <- readRDS("~/OneDrive - Universidad de los Andes/2023/2023-1/BIG DATA/TALLERES GRUPALES/TALLER No. 2/Problem_Set_2-_Predicting_Poverty/3. STORE/nv_training_sinna.rds")
#para training
nv_training_sinna<- nv_training_sinna %>%
mutate(P5090 = factor(P5090),
Dominio = factor(Dominio),
Clase = ifelse(Clase == 2, 0, Clase),
Depto = factor(Depto),
tipo_vivienda= factor(tipo_vivienda))
#para test
nv_test_sinna<- nv_test_sinna %>%
mutate(P5090 = factor(P5090),
Dominio = factor(Dominio),
Clase = ifelse(Clase == 2, 0, Clase),
Depto = factor(Depto),
tipo_vivienda= factor(tipo_vivienda))
p_load(caret)
# Dummyficamos ####
dumificador <- dummyVars(formula = ~ ., data = nv_training_sinna, fullRank = T)
db_train <- predict(dumificador, newdata = nv_training_sinna)
View(nv_test_sinna)
View(nv_test_sinna)
View(nv_training_sinna)
help Error: vector memory exhausted (limit reached?)
